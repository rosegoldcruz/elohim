(()=>{var e={};e.id=7995,e.ids=[7995],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},17981:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>_,routeModule:()=>h,serverHooks:()=>f,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>p});var n=r(96559),o=r(48088),i=r(37719),c=r(32190),u=r(79748),a=r(33873),l=r.n(a);async function p(e){try{console.log("⚙️ DocHarvester Process: Starting LLM processing...");let{documents:t}=await e.json();if(!t||0===t.length)return c.NextResponse.json({error:"No documents provided for processing"},{status:400});console.log(`📋 Processing ${t.length} documents for LLM use`);let r=t.filter(e=>"success"===e.status&&e.content);if(0===r.length)return c.NextResponse.json({error:"No successful documents with content to process"},{status:400});console.log(`✅ Found ${r.length} documents with content`);let s=[],n=0;for(let e of r){let t=function(e){if(!e.content)return[];let t=e.content.split(/\s+/).filter(e=>e.length>0);if(t.length<=1e3)return[{id:`${d()}_0`,url:e.url,title:e.title||"Untitled",content:e.content,chunk_index:0,total_chunks:1,word_count:t.length,char_count:e.content.length,metadata:{source_url:e.url,source_title:e.title||"Untitled",chunk_size:1e3,overlap:100,timestamp:new Date().toISOString()}}];let r=[],s=0,n=0;for(;s<t.length;){let o=Math.min(s+1e3,t.length),i=t.slice(s,o),c=i.join(" ");if(r.push({id:`${d()}_${n}`,url:e.url,title:e.title||"Untitled",content:c,chunk_index:n,total_chunks:0,word_count:i.length,char_count:c.length,metadata:{source_url:e.url,source_title:e.title||"Untitled",chunk_size:1e3,overlap:100,timestamp:new Date().toISOString()}}),o>=t.length)break;s=o-100,n++}return r.forEach(e=>{e.total_chunks=r.length}),r}(e);s.push(...t),n+=t.length,console.log(`📄 Processed ${e.title}: ${t.length} chunks`)}let o=Date.now(),i=l().resolve(process.cwd(),"output","processed");await (0,u.mkdir)(i,{recursive:!0});let a=`llm_chunks_${o}.json`,p=l().join(i,a),h={metadata:{timestamp:new Date().toISOString(),total_documents:r.length,total_chunks:n,chunk_size:1e3,overlap:100,processing_version:"1.0.0"},chunks:s};return await (0,u.writeFile)(p,JSON.stringify(h,null,2)),console.log(`✅ LLM processing complete! Created ${n} chunks in ${a}`),c.NextResponse.json({message:"LLM processing complete",file:p,chunks_created:n,documents_processed:r.length,chunk_size:1e3,overlap:100})}catch(e){return console.error("❌ Processing error:",e),c.NextResponse.json({error:"Processing failed",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}function d(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}let h=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/harvest/process/route",pathname:"/api/harvest/process",filename:"route",bundlePath:"app/api/harvest/process/route"},resolvedPagePath:"C:\\Users\\Administrator\\Elohim\\frontend\\app\\api\\harvest\\process\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:g,workUnitAsyncStorage:m,serverHooks:f}=h;function _(){return(0,i.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:m})}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},79748:e=>{"use strict";e.exports=require("fs/promises")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4447,580],()=>r(17981));module.exports=s})();