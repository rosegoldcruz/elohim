"use strict";(()=>{var e={};e.id=6650,e.ids=[6650],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},17712:(e,t,r)=>{r.r(t),r.d(t,{patchFetch:()=>j,routeModule:()=>E,serverHooks:()=>$,workAsyncStorage:()=>A,workUnitAsyncStorage:()=>I});var s={};r.r(s),r.d(s,{GET:()=>w,OPTIONS:()=>b,POST:()=>y,PUT:()=>T});var n=r(96559),a=r(48088),o=r(37719),i=r(32190),l=r(15637),u=r(44369),c=r(72980),d=r(31607);let p=null;p=r(42703);class g{constructor(){this.tasks=new Map,this.taskInfo=new Map,p&&this.initializeDefaultTasks()}initializeDefaultTasks(){this.scheduleTask({id:"daily_operations",name:"Daily Operations",schedule:"0 2 * * *",enabled:!0,runCount:0,errorCount:0},this.runDailyOperations.bind(this)),this.scheduleTask({id:"fraud_monitoring",name:"Fraud Monitoring",schedule:"0 */4 * * *",enabled:!0,runCount:0,errorCount:0},this.runFraudMonitoring.bind(this)),this.scheduleTask({id:"health_check",name:"System Health Check",schedule:"0 * * * *",enabled:!0,runCount:0,errorCount:0},this.runHealthCheck.bind(this)),this.scheduleTask({id:"weekly_report",name:"Weekly Executive Report",schedule:"0 9 * * 1",enabled:!0,runCount:0,errorCount:0},this.runWeeklyReport.bind(this)),this.scheduleTask({id:"export_cleanup",name:"Export Cleanup",schedule:"0 3 * * 0",enabled:!0,runCount:0,errorCount:0},this.runExportCleanup.bind(this)),this.scheduleTask({id:"emergency_fraud_sweep",name:"Emergency Fraud Sweep",schedule:"0 0 31 2 *",enabled:!1,runCount:0,errorCount:0},this.runEmergencyFraudSweep.bind(this)),console.log("✅ Cron scheduler initialized with default tasks")}scheduleTask(e,t){try{this.tasks.has(e.id)&&this.tasks.get(e.id)?.stop();let r=p.schedule(e.schedule,async()=>{await this.executeTask(e.id,t)},{scheduled:e.enabled,timezone:process.env.TIMEZONE||"UTC"});this.tasks.set(e.id,r),this.taskInfo.set(e.id,{...e,nextRun:this.getNextRunTime(e.schedule)}),console.log(`📅 Scheduled task: ${e.name} (${e.schedule})`)}catch(t){console.error(`Failed to schedule task ${e.id}:`,t)}}async executeTask(e,t){let r=this.taskInfo.get(e);if(!r)return;console.log(`🚀 Executing scheduled task: ${r.name}`);let s=Date.now();try{await t(),r.runCount++,r.lastRun=new Date().toISOString(),r.nextRun=this.getNextRunTime(r.schedule),this.taskInfo.set(e,r);let n=Date.now()-s;console.log(`✅ Task completed: ${r.name} (${n}ms)`)}catch(t){r.errorCount++,r.lastRun=new Date().toISOString(),this.taskInfo.set(e,r),console.error(`❌ Task failed: ${r.name}`,t),["daily_operations","fraud_monitoring"].includes(e)&&await d.q.sendSystemAlert("system_down",`Scheduled task failed: ${r.name}`,{task_id:e,error:t instanceof Error?t.message:"Unknown error",run_count:r.runCount,error_count:r.errorCount})}}async runDailyOperations(){console.log("\uD83E\uDD16 Running daily operations..."),await l.B.runDailyOps()}async runFraudMonitoring(){console.log("\uD83D\uDD0D Running fraud monitoring...");let e=await u.E.checkForFraud();console.log(`Fraud scan: ${e.alerts.length} alerts, ${e.actions_taken.length} actions taken`)}async runHealthCheck(){console.log("\uD83C\uDFE5 Running system health check..."),await l.B.monitorSystemHealth()}async runWeeklyReport(){console.log("\uD83D\uDCCA Generating weekly report..."),await l.B.generateWeeklyReport()}async runExportCleanup(){console.log("\uD83E\uDDF9 Running export cleanup..."),await c.E.cleanupOldExports(30)}async runEmergencyFraudSweep(){console.log("\uD83D\uDEA8 Running emergency fraud sweep..."),await l.B.runEmergencyFraudSweep()}startAll(){for(let[e,t]of this.tasks){let r=this.taskInfo.get(e);r?.enabled&&(t.start(),console.log(`▶️ Started task: ${r.name}`))}console.log("✅ All enabled cron tasks started")}stopAll(){for(let[e,t]of this.tasks){t.stop();let r=this.taskInfo.get(e);console.log(`⏹️ Stopped task: ${r?.name||e}`)}console.log("\uD83D\uDED1 All cron tasks stopped")}toggleTask(e,t){let r=this.tasks.get(e),s=this.taskInfo.get(e);return r&&s?(s.enabled=t,this.taskInfo.set(e,s),t?(r.start(),console.log(`▶️ Enabled task: ${s.name}`)):(r.stop(),console.log(`⏸️ Disabled task: ${s.name}`)),!0):(console.error(`Task not found: ${e}`),!1)}async triggerTask(e){let t=this.taskInfo.get(e);if(!t)return console.error(`Task not found: ${e}`),!1;console.log(`🔧 Manually triggering task: ${t.name}`);try{switch(e){case"daily_operations":await this.runDailyOperations();break;case"fraud_monitoring":await this.runFraudMonitoring();break;case"health_check":await this.runHealthCheck();break;case"weekly_report":await this.runWeeklyReport();break;case"export_cleanup":await this.runExportCleanup();break;case"emergency_fraud_sweep":await this.runEmergencyFraudSweep();break;default:return console.error(`Unknown task: ${e}`),!1}return console.log(`✅ Manual task execution completed: ${t.name}`),!0}catch(e){return console.error(`❌ Manual task execution failed: ${t.name}`,e),!1}}getTaskStatus(){return Array.from(this.taskInfo.values())}getNextRunTime(e){try{return new Date(Date.now()+864e5).toISOString()}catch{return"Unknown"}}async testEmailConfiguration(){try{await d.q.testConnection()?console.log("✅ Email configuration is valid"):console.warn("⚠️ Email configuration may have issues")}catch(e){console.error("❌ Email configuration test failed:",e)}}}let h=new g;var k=r(72289);let f=k.Ik({taskId:k.Yj(),force:k.zM().default(!1)}),m=k.Ik({taskId:k.Yj(),enabled:k.zM()});async function x(e){return(process.env.ADMIN_USER_IDS?.split(",")||[]).includes(e)}async function w(e){try{let{userId:e}=auth();if(!e)return i.NextResponse.json({error:"Authentication required"},{status:401});if(!await x(e))return i.NextResponse.json({error:"Admin access required"},{status:403});let t=h.getTaskStatus(),r={total_tasks:t.length,enabled_tasks:t.filter(e=>e.enabled).length,disabled_tasks:t.filter(e=>!e.enabled).length,tasks_with_errors:t.filter(e=>e.errorCount>0).length,total_runs:t.reduce((e,t)=>e+t.runCount,0),total_errors:t.reduce((e,t)=>e+t.errorCount,0)};return i.NextResponse.json({success:!0,data:{tasks:t,summary:r,server_time:new Date().toISOString(),timezone:process.env.TIMEZONE||"UTC"}})}catch(e){return console.error("Cron status API error:",e),i.NextResponse.json({error:"Failed to get cron status",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function y(e){try{let{userId:t}=auth();if(!t)return i.NextResponse.json({error:"Authentication required"},{status:401});if(!await x(t))return i.NextResponse.json({error:"Admin access required"},{status:403});let{action:r,...s}=await e.json();switch(r){case"trigger_task":return await _(s,t);case"toggle_task":return await R(s,t);case"start_all":return await S(t);case"stop_all":return await C(t);default:return i.NextResponse.json({error:"Invalid action"},{status:400})}}catch(e){return console.error("Cron management API error:",e),i.NextResponse.json({error:"Failed to manage cron tasks",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function _(e,t){let{taskId:r,force:s}=f.parse(e);console.log(`Admin ${t} manually triggering task: ${r}`);try{if(!await h.triggerTask(r))return i.NextResponse.json({error:`Failed to trigger task: ${r}`},{status:400});return i.NextResponse.json({success:!0,data:{task_id:r,triggered_by:t,triggered_at:new Date().toISOString(),force_executed:s}})}catch(e){return console.error(`Task trigger failed for ${r}:`,e),i.NextResponse.json({error:`Task execution failed: ${r}`,details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function R(e,t){let{taskId:r,enabled:s}=m.parse(e);console.log(`Admin ${t} ${s?"enabling":"disabling"} task: ${r}`);try{if(!h.toggleTask(r,s))return i.NextResponse.json({error:`Failed to toggle task: ${r}`},{status:400});return i.NextResponse.json({success:!0,data:{task_id:r,enabled:s,modified_by:t,modified_at:new Date().toISOString()}})}catch(e){return console.error(`Task toggle failed for ${r}:`,e),i.NextResponse.json({error:`Failed to toggle task: ${r}`,details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function S(e){console.log(`Admin ${e} starting all cron tasks`);try{return h.startAll(),i.NextResponse.json({success:!0,data:{action:"start_all",executed_by:e,executed_at:new Date().toISOString()}})}catch(e){return console.error("Start all tasks failed:",e),i.NextResponse.json({error:"Failed to start all tasks",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function C(e){console.log(`Admin ${e} stopping all cron tasks`);try{return h.stopAll(),i.NextResponse.json({success:!0,data:{action:"stop_all",executed_by:e,executed_at:new Date().toISOString()}})}catch(e){return console.error("Stop all tasks failed:",e),i.NextResponse.json({error:"Failed to stop all tasks",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function T(e){try{let{userId:t}=auth();if(!t)return i.NextResponse.json({error:"Authentication required"},{status:401});if(!await x(t))return i.NextResponse.json({error:"Admin access required"},{status:403});let{timezone:r,email_notifications:s}=await e.json();return console.log(`Admin ${t} updated cron configuration`,{timezone:r,email_notifications:s,timestamp:new Date().toISOString()}),i.NextResponse.json({success:!0,data:{configuration_updated:!0,updated_by:t,updated_at:new Date().toISOString()}})}catch(e){return console.error("Cron configuration update error:",e),i.NextResponse.json({error:"Failed to update cron configuration",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function b(){return new i.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let E=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/admin/cron/route",pathname:"/api/admin/cron",filename:"route",bundlePath:"app/api/admin/cron/route"},resolvedPagePath:"C:\\Users\\Administrator\\Elohim\\frontend\\app\\api\\admin\\cron\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:A,workUnitAsyncStorage:I,serverHooks:$}=E;function j(){return(0,o.patchFetch)({workAsyncStorage:A,workUnitAsyncStorage:I})}},21820:e=>{e.exports=require("os")},23405:e=>{e.exports=require("@supabase/ssr")},27910:e=>{e.exports=require("stream")},28354:e=>{e.exports=require("util")},29021:e=>{e.exports=require("fs")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{e.exports=require("path")},34631:e=>{e.exports=require("tls")},37366:e=>{e.exports=require("dns")},42703:e=>{e.exports=require("node-cron")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{e.exports=require("crypto")},55591:e=>{e.exports=require("https")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{e.exports=require("zlib")},79551:e=>{e.exports=require("url")},79646:e=>{e.exports=require("child_process")},79748:e=>{e.exports=require("fs/promises")},81630:e=>{e.exports=require("http")},91645:e=>{e.exports=require("net")},94735:e=>{e.exports=require("events")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4447,580,2289,9526,1563,9157,5637],()=>r(17712));module.exports=s})();